name: Production Stage

on:
  workflow_run:
    workflows: [Development Stage]
    types:
      -completed

env:
  SAM_TEMPLATE: template.yaml
  TESTING_STACK_NAME: pdf-encrypt-dev
  TESTING_REGION: ap-northeast-1
  PROD_STACK_NAME: pdf-encrypt-prod
  PROD_REGION: ap-northeast-1

permissions:
  id-token: write
  contents: read
jobs:

  build-and-deploy-feature:
    # this stage is triggered only for feature branches (feature*),
    # which will build the stack and deploy to a stack named with branch name.
    # https://github.com/actions/setup-python
    # https://github.com/aws-actions/configure-aws-credentials#notice-node12-deprecation-warning
    if: startsWith(github.ref, 'refs/heads/feature')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - run: sam build --template ${SAM_TEMPLATE} --use-container

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ secrets.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy to feature stack in the testing account
        shell: bash
        run: |
          sam deploy --stack-name $(echo ${GITHUB_REF##*/} | tr -cd '[a-zA-Z0-9-]') \
            --capabilities CAPABILITY_IAM \
            --region ${TESTING_REGION} \
            --s3-bucket ${ secrets.TESTING_ARTIFACTS_BUCKET }} \
            --image-repository ${{ secrets.TESTING_IMAGE_REPOSITORY }} \
            --no-fail-on-empty-changeset \
            --role-arn ${{ secrets.TESTING_CLOUDFORMATION_EXECUTION_ROLE }}


  build-and-package-for-prod:
    #if: github.ref == 'refs/heads/main'
    needs: [build-and-package-for-dev]
    runs-on: ubuntu-latest
    env:
      user-role: prod
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Build resources for prod
        env:
          user-role: prod
        run: sam build --template ${SAM_TEMPLATE} --use-container

      - name: Assume the prod pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.PROD_REGION }}
          role-to-assume: ${{ secrets.PROD_PIPELINE_EXECUTION_ROLE }}
          role-session-name: prod-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Upload artifacts to production artifact buckets
        run: |
          sam package \
            --s3-bucket ${{ secrets.PROD_ARTIFACTS_BUCKET }} \
            --image-repository ${{ secrets.PROD_IMAGE_REPOSITORY }} \
            --region ${PROD_REGION} \
            --output-template-file packaged-prod.yaml

      - uses: actions/upload-artifact@v3
        with:
          name: packaged-prod.yaml
          path: packaged-prod.yaml

  integration-test:
    #if: github.ref == 'refs/heads/main'
    needs: [deploy-testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # trigger the integration tests here

  deploy-prod:
    #if: github.ref == 'refs/heads/main'
    needs: [integration-test]
    runs-on: ubuntu-latest
    # Configure GitHub Action Environment to have a manual approval step before deployment to production
    # https://docs.github.com/en/actions/reference/environments
    # environment: <configured-environment>
    env:
      user-role: prod
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - uses: actions/download-artifact@v3
        with:
          name: packaged-prod.yaml

      - name: Assume the prod pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.PROD_REGION }}
          role-to-assume: ${{ secrets.PROD_PIPELINE_EXECUTION_ROLE }}
          role-session-name: prod-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy to production account
        run: |
          sam deploy --stack-name ${PROD_STACK_NAME} \
            --template packaged-prod.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${PROD_REGION} \
            --s3-bucket ${{ secrets.PROD_ARTIFACTS_BUCKET }} \
            --image-repository ${{ secrets.PROD_IMAGE_REPOSITORY }} \
            --no-fail-on-empty-changeset \
            --role-arn ${{ secrets.PROD_CLOUDFORMATION_EXECUTION_ROLE }}
